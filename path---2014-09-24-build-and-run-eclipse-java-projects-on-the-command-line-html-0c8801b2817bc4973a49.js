webpackJsonp([26019895347478],{361:function(e,a){e.exports={data:{markdownRemark:{html:'<p><strong>You can skip the context of this post if all you need is the commands.</strong></p>\n<h1>Some context</h1>\n<p>Recently, I had to work on a Java assignment. I created a Java project in\nEclipse and jumped right into the assignment.</p>\n<p>This was great as I got started really quickly, writing tests, running them,\ndebugging my code, stepping through them in the debugger, fixing compile time\nerrors etc. Eclipse handled all these things without much setup on my part.</p>\n<p>However, for my assignment, the final submission required me build and run my\njava program from the command line. This shouldn\'t be a big problem (I thought)\nand it wasn\'t, the only unfortunate things was that googling around for a solution\ntook longer than I expected.</p>\n<!--more-->\n<p><em>I had expected StackOverflow to already contain the answer to my question since\nI figured someone probably faced the same issue before.</em></p>\n<p>I found the following:</p>\n<ul>\n<li><a href="http://stackoverflow.com/questions/5441565/java-build-and-run-eclipse-project-from-command-line">Java - Build and run eclipse project from command line</a></li>\n<li><a href="http://stackoverflow.com/questions/18902934/compile-and-run-eclipse-project-from-command-prompt">Compile and run Eclipse Project from command prompt</a></li>\n<li><a href="http://stackoverflow.com/questions/206473/build-eclipse-java-project-from-command-line">Build Eclipse Java Project from Command Line</a></li>\n<li><a href="http://stackoverflow.com/questions/2276219/can-i-run-from-command-line-program-created-by-eclipse">Can I run command line program created by eclipse</a></li>\n</ul>\n<p>All of which were not particularly helpful for my situation..</p>\n<p>To be clear, I wanted</p>\n<ul>\n<li>Simple <code class="language-text">javac</code> and <code class="language-text">java</code> commands that I could run (or\nadd to a <code class="language-text">Makefile</code>) such that the <code class="language-text">.class</code> files generated would go into the\n<code class="language-text">bin</code> folder created in the eclipse project. <em>(So running it via the command line\nwould be similar to running it in eclipse in terms of what files were\ngenerated.)</em></li>\n<li>Possibly a way to run my <code class="language-text">junit</code> tests from the command line too. (less\nimportant).</li>\n</ul>\n<h1>My project setup.</h1>\n<p>My project structure is as follows:</p>\n<div class="gatsby-highlight">\n      <pre class="language-bash"><code class="language-bash">cs5223\n  <span class="token operator">|</span>- .classpath\n  <span class="token operator">|</span>- .project\n  <span class="token operator">|</span>- src\n      <span class="token operator">|</span>- cs5223\n          <span class="token operator">|</span>- Server.java\n          <span class="token operator">|</span>- Player.java\n          <span class="token operator">|</span>- Game.java\n  <span class="token operator">|</span>- bin\n  <span class="token operator">|</span>- <span class="token builtin class-name">test</span>\n      <span class="token operator">|</span>- cs5223\n          <span class="token operator">|</span>- PlayerTest.java\n          <span class="token operator">|</span>- GameTest.java</code></pre>\n      </div>\n<h1>Building the project</h1>\n<p>Run the following command to compile your <code class="language-text">.java</code> file in <code class="language-text">src</code> and put them in <code class="language-text">bin</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-bash"><code class="language-bash">javac -d bin/ -cp src /path/to/java/file</code></pre>\n      </div>\n<p> My package was called <code class="language-text">cs5223</code> and I was trying to build <code class="language-text">cs5223.Server.java</code>\n<em>(which was the entry point into my project).</em></p>\n<div class="gatsby-highlight">\n      <pre class="language-bash"><code class="language-bash">javac -d bin/ -cp src src/cs5223/Server.java</code></pre>\n      </div>\n<h1>Running the project</h1>\n<p>Once you\'ve compiled your <code class="language-text">.java</code> files, you run them using the following command.</p>\n<div class="gatsby-highlight">\n      <pre class="language-bash"><code class="language-bash">java -cp bin JAVA_CLASS</code></pre>\n      </div>\n<p>My <code class="language-text">Server</code> class had the following fully qualified package path:\n<code class="language-text">cs5223.Server</code> so I ran the following command.</p>\n<div class="gatsby-highlight">\n      <pre class="language-bash"><code class="language-bash">java -cp bin cs5223.Server</code></pre>\n      </div>\n<h1>Running my junit tests</h1>\n<p>This required downloading a <a href="https://github.com/junit-team/junit/wiki/Download-and-Install"><code class="language-text">junit</code> jar</a>\nwhich I placed in my root folder. <em>(Pretty sure you can avoid doing this, but this was cleaner imo)</em></p>\n<div class="gatsby-highlight">\n      <pre class="language-bash"><code class="language-bash"><span class="token comment"># Building the tests.</span>\njavac -cp junit-4.8.1.jar:src -d test/ <span class="token punctuation">\\</span>\n    test/cs5223/GameTest.javacva <span class="token punctuation">\\</span>\n    test/cs5223/PlayerTest.java\n\n<span class="token comment"># Runing the tests</span>\njava -cp test:bin:junit-4.8.1.jar orrg.junit.runner.JUnitCore <span class="token punctuation">\\</span>\n    cs5223.GameTest <span class="token punctuation">\\</span>\n    cs5223.PlayerTest</code></pre>\n      </div>\n<p><em>Semicolons are used to demarcate multiple paths.</em></p>',frontmatter:{title:"Build and run eclipse java projects from the command line",date:"24 September, 2014"},fields:{slug:"/2014/09/24/build-and-run-eclipse-java-projects-on-the-command-line.html"}}},pathContext:{slug:"/2014/09/24/build-and-run-eclipse-java-projects-on-the-command-line.html"}}}});
//# sourceMappingURL=path---2014-09-24-build-and-run-eclipse-java-projects-on-the-command-line-html-0c8801b2817bc4973a49.js.map