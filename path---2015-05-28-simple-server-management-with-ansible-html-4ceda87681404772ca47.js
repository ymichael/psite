webpackJsonp([70478302107044],{364:function(e,a){e.exports={data:{markdownRemark:{html:'<p>Recently, I discovered <a href="http://www.ansible.com/home">Ansible</a>, a tool to remotely manage servers. I haven\'t used <em>chef</em> or <em>puppet</em> but I hear its similar but simpler. It helps, for now, to think of Ansible as simply "remote ssh commands".</p>\n<p>My ansible <em>plays</em> for server management can be found here: <a href="https://github.com/ymichael/ansible-ubuntu-box">https://github.com/ymichael/ansible-ubuntu-box</a></p>\n<!--more-->\n<h2>Motivation</h2>\n<p>I find myself having to do the same setup each time I start a new server<sup id="fnref-1"><a href="#fn-1" class="footnote-ref">1</a></sup> <em>(I use Ubuntu 14.04)</em>. Simple things like:</p>\n<ul>\n<li>creating a new user</li>\n<li>adding my public key to the authorized key file</li>\n<li>adding this user to the sudoers file</li>\n<li>disabling root ssh access</li>\n<li>disabling password ssh access</li>\n<li>update apt cache</li>\n<li>configuring UFW to allow/deny some ports</li>\n<li>...</li>\n</ul>\n<p>Because I do this rather infrequently, I usually google for a guide. Additionally, this process is mundane and time consuming. <em>A perfect candidate for automation!</em></p>\n<p>In addition to one-off user setup, I also find myself having to install various software on my servers:</p>\n<ul>\n<li>git</li>\n<li>nodejs</li>\n<li>fail2ban</li>\n<li>...</li>\n</ul>\n<p>These are more variable and depend on what I\'ll eventually be using the server for <em>(application deployment using ansible probably is a whole blog post by itself)</em>.</p>\n<h2>My <a href="https://github.com/ymichael/ansible-ubuntu-box">ansible plays</a></h2>\n<p>I basically have two plays:</p>\n<ul>\n<li><code class="language-text">newuser.yml</code>: which creates and sets up a new user</li>\n<li><code class="language-text">main.yml</code>: which installs various things and secures the server</li>\n</ul>\n<p>The <code class="language-text">newuser.yml</code> play is one-off per server, whereas I update the <code class="language-text">main.yml</code> play and run it whenever I want to install something new.</p>\n<p>To set up a new box, I simply edit my host file and add the node\'s ip address to it.</p>\n<h2>Ansible <em>plays</em>?</h2>\n<p>The first confusing thing about ansible, at least for me, was the terminology. But once you get past that, you\'ll start to wonder how you got by without it.</p>\n<ul>\n<li>You can think of a <strong>play</strong> as a list of <strong>tasks</strong>.</li>\n<li>Each <strong>task</strong> is akin to running an "ssh command"</li>\n</ul>\n<p>If you start googling/reading about Ansible, you\'ll see terms like <em>playbooks</em> and <em>roles</em>. For the sake of simplicity, I\'m not going to go over them since we won\'t be using them.</p>\n<p>Ansible plays are written in <a href="http://yaml.org/">YAML</a> and super readable. You don\'t really need to be an expert in the language. You probably can figure out the syntax once you\'ve seen some examples of it.</p>\n<div class="gatsby-highlight">\n      <pre class="language-yaml"><code class="language-yaml"><span class="token comment"># Example task in yaml</span>\n<span class="token comment"># sudo apt-get upgrade</span>\n<span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Update all packages to the latest version\n  <span class="token key atrule">sudo</span><span class="token punctuation">:</span> yes\n  <span class="token key atrule">apt</span><span class="token punctuation">:</span> upgrade=safe</code></pre>\n      </div>\n<h2>The host file</h2>\n<p>A <strong>hosts</strong> file in ansible simply tells it which servers to talk to. <em>This file is a simple ini file (so you can apply labels and group servers).</em></p>\n<p>For starts you can simply put the ip address of the server on the first line of the file.</p>\n<div class="gatsby-highlight">\n      <pre class="language-bash"><code class="language-bash">$ <span class="token builtin class-name">echo</span> NODE_IP <span class="token operator">></span> hosts</code></pre>\n      </div>\n<h2>Running plays</h2>\n<p>Finally, in order to run a play, you run the following command:</p>\n<div class="gatsby-highlight">\n      <pre class="language-bash"><code class="language-bash">$ ansible-playbook -i /path/to/hosts /path/to/yaml/file</code></pre>\n      </div>\n<h2>Closing thoughts</h2>\n<p>I know that I\'ve barely scratched the surface here. There is so much more that can be done but its a start. I\'m currently trying to use Ansible to run remote <code class="language-text">docker</code> commands to set up and link containers on my server to deploy and update applications easily. I\'ll probably write about that or release the plays on github when I\'m done.</p>\n<p>I\'ve also found <a href="https://galaxy.ansible.com/">ansible-galaxy</a> to be a rich source of plays and references on how to accomplish certain things.</p>\n<br>\n<h2>Footnotes</h2>\n<div class="footnotes">\n<hr>\n<ol>\n<li id="fn-1">\n<p>I use Digital Ocean and its awesome. My referral link: <a href="https://www.digitalocean.com/?refcode=94be0d6caba4">https://www.digitalocean.com/?refcode=94be0d6caba4</a>.</p>\n<a href="#fnref-1" class="footnote-backref">â†©</a>\n</li>\n</ol>\n</div>',frontmatter:{title:"Simple Server Management with Ansible",date:"28 May, 2015"},fields:{slug:"/2015/05/28/simple-server-management-with-ansible.html"}}},pathContext:{slug:"/2015/05/28/simple-server-management-with-ansible.html"}}}});
//# sourceMappingURL=path---2015-05-28-simple-server-management-with-ansible-html-4ceda87681404772ca47.js.map