webpackJsonp([0xb273a851c3b0],{356:function(e,o){e.exports={data:{markdownRemark:{html:'<p>I recently made some changes to <a href="https://github.com/ymichael/cprofilev">cProfileV</a>, adding the ability to immediately profile a script and run it at the same time.</p>\n<!--more-->\n<p>It was always a personal pain point to separately output a temporary profile object before using <code>cprofilev</code> to visualise this information and I\'ve been meaning to add this for a while.</p>\n<p>This also changes how cProfileV is invoked on the command-line:</p>\n<ol>\n<li>\n<p>Simply run your python program in with the -m cprofilev flag.</p>\n<p>$ python -m cprofilev /path/to/python/program ...</p>\n</li>\n<li>\n<p>Navigate to <a href="http://localhost:4000">http://localhost:4000</a> to view the profile statistics <em>(even while the program is still running!)</em></p>\n</li>\n</ol>\n<p>I\'ve also added a <code>-f</code> flag for backward compatibility so people who like the previous method of using profile objects can continue to do so:</p>\n<div class="gatsby-highlight">\n      <pre class="language-none"><code class="language-none">$ cprofilev -f /path/to/save/output</code></pre>\n      </div>\n<p>I previously wrote about how to make sense of the profile information <a href="/2014/03/08/profiling-python-with-cprofile.html">here</a>.</p>',frontmatter:{title:"cProfileV v2",date:"28 May, 2015"},fields:{slug:"/2015/05/28/cprofilev-v2.html"}}},pathContext:{slug:"/2015/05/28/cprofilev-v2.html"}}}});
//# sourceMappingURL=path---2015-05-28-cprofilev-v-2-html-c19c0290992b9be6a3bc.js.map